base: &base

  # Training config
  model: 'base' 
  weight_init: {conv_init: 'normal', conv_scale: 0.02, conv_bias: 0.}
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 0 # radius from edge where model is not held accountable for loss
  full_scale: True # whether or not to use all 6 of the scales in U-Net
  dense: False # whether or not to use extra stride-1 layers in the U-Net
  global_batch_size: 64 # number of samples per training batch
  base_batch_size: 64 # single GPU batch size
  Nsamples: 65536
  Nsamples_val: 8192
  num_epochs: 10
  enable_amp: False
  enable_apex: False
  enable_benchy: False
  enable_jit: False
  expdir: '/logs'

  # params for setting learning rate (cosine decay schedule):
  #   start_lr: initial learning rate
  #   end_lr:  final learning rate
  #   warmup_steps: number of steps over which to do linear warm-up of learning rate
  #                 *not used when training single-GPU or when scaling='none'*
  #   scaling: 'none' initial lr doesn't change with respect to global batch size
  #            'linear' scale up according to lr_global_batchsize = (global_batchsize/base_batchsize)*lr_base_batchsize
  #            'sqrt' scale up according to lr_global_batchsize = sqrt(global_batchsize/base_batchsize)*lr_base_batchsize
  lr_schedule: {scaling: 'sqrt', start_lr: 2.E-4, end_lr: 0., warmup_steps: 128}

  # Data
  data_loader_config: 'lowmem' # choices: 'synthetic', 'inmem', 'lowmem', 'dali-lowmem'
  box_size: [512, 512] # total size of simulation boxes (train, validation) OLD
  data_size: 64 # size of crops for training
  num_data_workers: 2 # number of dataloader worker threads per proc
  N_out_channels: 5
  N_in_channels: 5
  # HDF5 files for PyTorch native dataloader
  train_path: '/data/downsamp_2048crop_train.h5'
  val_path: '/data/downsamp_1024crop_valid.h5'
  use_cache: None # set this to a cache dir (e.g., NVMe on CoriGPU) if you copied data there
  last_filter: 'relu'
  up_filter: 'relu'
  down_filter: 'leaky'
  upsample: False
  blur: False
  single_box: False

  
vanilla: &vanilla
  <<: *base
  Nsamples: 8192
  Nsamples_val: 512
  num_epochs: 20
  box_size: [1024, 1024]
  data_size: 128
  num_data_workers: 8
  data_loader_config: 'lowmem'
  global_batch_size: 32
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 1.E-4, warmup_steps: 0}
  train_path: '/pscratch/sd/p/pharring/Nyx_nbod2hydro/normalized_data/train.h5'
  val_path: '/pscratch/sd/p/pharring/Nyx_nbod2hydro/normalized_data/test.h5'
  use_cache: '/tmp/'
    
new_flux_vanilla: &flux_vanilla
  <<: *vanilla 
  box_size: [512, 512]
  data_size: 128
  global_batch_size: 32
  Nsamples: 8192
  Nsamples_val: 512
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 200
  use_cache: None
  trim: 4 # radius from edge where model is not held accountable for loss
  full_scale: True
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: False
  upsample: False
  single_box: False
  
new_realflux:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_real_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_real_flux.h5'
  
naive_flux:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_naive_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_naive_flux.h5'
  
new_dense_realflux:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_real_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_real_flux.h5'
  dense: True 
  num_epochs: 600
  
new_dense_invar03_flux:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  
invar03_dense:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  
invar03_dense_blur:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  blur: True
  upsample: False
  
invar03_dense_fft:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  lambda_spec: 3 # weight for additional powerspectrum loss term
  trim: 2 # radius from edge where model is not held accountable for loss
  
invar03_dense_logfft:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  lambda_spec: 3 # weight for additional powerspectrum loss term
  trim: 2 # radius from edge where model is not held accountable for loss
  
invar03_dense_sig:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 0
  
invar03_dense_sig_rev:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 2
  
invar03_dense_sig_fft:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 2
  
invar03_dense_sig_fft_pdf:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 2
  lambda_chi: 2e-6
  
new_flux_fft:
  <<: *flux_vanilla
  lambda_spec: 3 # weight for additional powerspectrum loss term
  trim: 0 # radius from edge where model is not held accountable for loss
  
new_flux_sig_spec:
  <<: *flux_vanilla
  lambda_spec: 2 # weight for additional powerspectrum loss term
  last_filter: 'sigmoid'
  
new_flux_blur_fft:
  <<: *flux_vanilla
  lambda_spec: 3 # weight for additional powerspectrum loss term
  last_filter: 'relu'
  blur: True
  
new_flux_blur_sig_spec:
  <<: *flux_vanilla
  lambda_spec: 3 # weight for additional powerspectrum loss term
  last_filter: 'sigmoid'
  blur: True
  
new_flux_dense:
  <<: *flux_vanilla
  dense: True 
  num_epochs: 600
  lambda_spec: 0 # weight for additional powerspectrum loss term
  
rev_flux_dense:
  <<: *flux_vanilla
  dense: True 
  num_epochs: 700
  lambda_spec: 1 # weight for additional powerspectrum loss term
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  trim: 2 # radius from edge where model is not held accountable for loss
  
new_flux_dense_fft:
  <<: *flux_vanilla
  dense: True 
  num_epochs: 600
  lambda_spec: 3 # weight for additional powerspectrum loss term
  trim: 2 # radius from edge where model is not held accountable for loss
  
  
# =======================================================================================================


flux_sigmoid:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 128
  global_batch_size: 32
  Nsamples: 8192
  Nsamples_val: 512
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 60
  use_cache: None
  
flux_chi_spec:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 192
  global_batch_size: 32
  Nsamples: 8192
  Nsamples_val: 512
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 60
  use_cache: None
  lambda_chi: 1e-7 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  
flux_spec_256:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 256
  global_batch_size: 32
  Nsamples: 2048
  Nsamples_val: 128
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 60
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  
flux_spec_64:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 64
  global_batch_size: 32
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 60
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  
flux_self_spec_256:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 256
  global_batch_size: 32
  Nsamples: 2048
  Nsamples_val: 128
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'self'
  
flux_self_upsamp_spec:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 192
  global_batch_size: 32
  Nsamples: 8192
  Nsamples_val: 512
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'self'
  
flux_self_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  
  
flux_self_upsamp_spec_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 200
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'self'
  up_filter: 'relu'
  down_filter: 'leaky'
  upsample: True
  
flux_self_upsamp_test_192:
  <<: *vanilla
  box_size: [256, 256]
  data_size: 192
  global_batch_size: 32
  Nsamples: 2048
  Nsamples_val: 128
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_medium/train_s1_256_hydro.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'self'
  up_filter: 'relu'
  down_filter: 'leaky'
  upsample: True
  
flux_self_upsamp_test_128:
  <<: *vanilla
  box_size: [132, 512]
  data_size: 128
  global_batch_size: 32
  Nsamples: 2048
  Nsamples_val: 128
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_medium/train_s1_256_hydro.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'self'
  up_filter: 'relu'
  down_filter: 'leaky'
  upsample: True
  
flux_relu_test_128:
  <<: *vanilla
  box_size: [132, 512]
  data_size: 128
  global_batch_size: 32
  Nsamples: 2048
  Nsamples_val: 128
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_medium/train_s1_256_hydro.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 200
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'relu'
  up_filter: 'relu'
  down_filter: 'leaky'
  upsample: False
  
flux_relu_128:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 128
  global_batch_size: 32
  Nsamples: 2048
  Nsamples_val: 128
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 500
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'relu'
  up_filter: 'relu'
  down_filter: 'leaky'
  upsample: False
  
flux_self_blur_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: True
  upsample: True

  
flux_sigmoid_upsamp_spec_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 200
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 1 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'sigmoid'
  up_filter: 'self'
  down_filter: 'self'
  upsample: True
  
flux_sigmoid_blur_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 200
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 32 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  last_filter: 'sigmoid'
  up_filter: 'self'
  down_filter: 'self'
  blur: True
  upsample: True
  
flux_blur_test_96:
  <<: *vanilla
  box_size: [100, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 100
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: True
  upsample: True
  single_box: True
  
new_flux_blur_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 500
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: True
  upsample: True
  single_box: False
  
new_flux_blur_only_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 500
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: True
  upsample: False
  single_box: False
  
new_flux_upsamp_only_96:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 96
  global_batch_size: 128
  Nsamples: 32768
  Nsamples_val: 4096
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 500
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: False
  upsample: True
  single_box: False
  
new_flux_blur_192:
  <<: *vanilla
  box_size: [512, 512]
  data_size: 192
  global_batch_size: 16
  Nsamples: 1048
  Nsamples_val: 32
  N_in_channels: 5
  N_out_channels: 1
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_flux.h5'
  num_epochs: 500
  use_cache: None
  lambda_chi: 0 # weight for additional chi loss term
  lambda_spec: 0 # weight for additional powerspectrum loss term
  trim: 16 # radius from edge where model is not held accountable for loss
  full_scale: False
  lr_schedule: {scaling: 'none', start_lr: 1.E-4, end_lr: 0., warmup_steps: 0}
  blur: True
  upsample: True
  single_box: False
  
  #=========================================================================================================================
  
valid_dense_sig_fft_pdf:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/valid_s2_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 2
  lambda_chi: 2e-6
  
valid_dense_sig_fft:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/valid_s2_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 2
  lambda_chi: 0
  
valid_fft:
  <<: *flux_vanilla
  train_path: '/pscratch/sd/c/cjacobus/Nyx_512/train_s1_512_invar3_flux.h5'
  val_path: '/pscratch/sd/c/cjacobus/Nyx_512/valid_s2_512_invar3_flux.h5'
  dense: True 
  num_epochs: 600
  trim: 2 # radius from edge where model is not held accountable for loss
  last_filter: 'sigmoid'
  lambda_spec: 1
  lambda_chi: 0